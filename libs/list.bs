#use libs/asm/bs_list.asm

const int BS_ENDOF_LIST 0xfffffff

block List int -> ptr
    size
    pr = bs_makeList size
    return pr
end

block li_insert ptr int int -> void
    pr value index
    size = li_size pr
    if index > size
    | raise "index out of range\n"
    | return
    x = li_get pr index
    if x == BS_ENDOF_LIST
    | return
    bs_insert pr value index
end

block li_contains ptr int -> bool
    pr value
    size = li_size pr
    index = 0
    do
        x = li_get pr index
        if x == value
        | return true
        index + 1
    while index < size
    return false
end

block li_get ptr int -> int
    pr index
    ## TODO: check if index is valid
    got = bs_get pr index
    return got
end

block li_remove ptr int -> void
    pr index
    ## TODO: check if index is valid
    bs_remove pr index
end

block li_size ptr -> int
    pr
    sz = bs_length pr
    sz / 8
    return sz
end